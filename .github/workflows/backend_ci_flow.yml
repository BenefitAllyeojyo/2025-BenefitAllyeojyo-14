name: backend_ci_flow

on:
  pull_request:
    branches:
      - main
      - dev/backend
      - release/backend

jobs:
  build:
    name: build and test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'


      - uses: actions/checkout@v3
      - run: touch ./backend/community/src/test/resources/application.yml
      - run: echo "${{ secrets.COMMUNITY_TEST_APPLICATION }}" > ./backend/community/src/test/resources/application.yml
      - run: touch ./backend/core-bank/src/test/resources/application.yml
      - run: echo "${{ secrets.CORE_BANK_TEST_APPLICATION }}" > ./backend/core-bank/src/test/resources/application.yml

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          cd backend
          ./gradlew build sonar --info

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: Publish test report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
